name: minitwit workflow

on:
  release:
    types:
      - created


env:
  WEB: docker.pkg.github.com/$GITHUB_REPOSITORY/web
  PROXY: docker.pkg.github.com/$GITHUB_REPOSITORY/proxy
  API: docker.pkg.github.com/$GITHUB_REPOSITORY/api

jobs:

  build:
    name: Build Docker Images
    runs-on: ubuntu-latest
    steps:
      - name: Checkout master
        uses: actions/checkout@v1
      - name: Add environment variables to .env
        run: |
          echo DEBUG=0 >> .api.env
          echo DB_NAME= ${{ api.secrets.DB_NAME }} >> .api.env
          echo DB_USER= ${{ api.secrets.DB_USER }} >> .api.env
          echo DB_PASSWORD= ${{ api.secrets.DB_PASSWORD }} >> .api.env
          echo DB_HOST= ${{ api.secrets.DB_HOST }} >> .api.env
          echo ALLOWED_HOSTS= ${{ api.secrets.ALLOWERD_HOSTS }} >> .api.env
          echo MINITWIT_SECRET_KEY= ${{ api.secrets.MINITWIT_SECRET_KEY }} >> .api.env

          echo DEBUG=0 >> .web.env
          echo DB_NAME= ${{ web.secrets.DB_NAME }} >> .web.env
          echo DB_USER= ${{ web.secrets.DB_USER }} >> .web.env
          echo DB_PASSWORD= ${{ web.secrets.DB_PASSWORD }} >> .web.env
          echo DB_HOST= ${{ web.secrets.DB_HOST }} >> .web.env
          echo ALLOWED_HOSTS= ${{ web.secrets.ALLOWERD_HOSTS }} >> .web.env
          echo MINITWIT_SECRET_KEY= ${{ web.secrets.MINITWIT_SECRET_KEY }} >> .web.env
          
          echo PASSWORD= ${{ db.secrets.PASSWORD }} >> .db.env
          echo USER= ${{ db.secrets.USER }} >> .db.env
          echo DATABASE= ${{ db.secrets.PASSWORD }} >> .db.env

      - name: Set environment variables
        run: |
          echo ::set-env name=WEB::${{ env.WEB }}
          echo ::set-env name=PROXY::${{ env.PROXY }}
          echo ::set-env name=DB::${{ env.DB }}
      - name: Log in to GitHub Packages
        run: echo ${GITHUB_TOKEN} | docker login -u ${GITHUB_ACTOR} --password-stdin docker.pkg.github.com
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Pull images
        run: |
          docker pull ${{ env.WEB_IMAGE }} || true
          docker pull ${{ env.NGINX_IMAGE }} || true
      - name: Build images
        run: |
          docker-compose -f docker-compose.ci.yml build
      - name: Push images
        run: |
          docker push ${{ env.WEB_IMAGE }}
          docker push ${{ env.NGINX_IMAGE }}