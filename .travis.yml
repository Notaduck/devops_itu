os: linux
dist: bionic
group: edge
arch: arm64-graviton2
language: python
cache: pip
python:
- 3.9
services:
- docker

if: branch = main 
before_install:
- openssl aes-256-cbc -K $encrypted_56635d5d55b3_key -iv $encrypted_56635d5d55b3_iv
  -in ./ssh_keys/do_ssh_key.enc -out /tmp/git_deploy_key -d
- chmod 600 /tmp/git_deploy_key
- echo 'echo ${SSH_PASSPHRASE}' > /tmp/askpass && chmod +x /tmp/askpass
- eval "$(ssh-agent -s)"
- DISPLAY=":0.0" SSH_ASKPASS="/tmp/askpass" setsid ssh-add /tmp/git_deploy_key </dev/null

before_deploy:
    # Set up git user name and tag this commit
    - git config --local user.name "daaa"
    - git config --local user.email "daaa@itu.dk"
    - export TRAVIS_TAG=${TRAVIS_TAG:-$(date +'%Y%m%d%H%M%S')-$(git log --format=%h -1)}
    - git tag $TRAVIS_TAG

deploy:
  provider: releases
  token:
    secure: rvydoFDNZUvJxQ5yQrCCMANBPZhzfGIBUhvM8mXxFMWfJ0stz8N/+B2L4nEdY4xVSNA9gcKeYvuMt1AtIHSnCeWW3YYfhfmOmFJgiyWLtbLnWPcOmZzsXEGGOqW4wCF5L8H3GzpNbn46uOp6vw8uIgamVYAc+OZVe+bc+4htxKtA2fgDkUgFc/7eVtq7aWJlRcnKJeTtgkjJMaEskwDZiaXCuQnP+wTXjrysH16flQZgrRXmlrrogfz3i1pOO5CNjW53FhpVrKgV1EQcSKeVmusHe9VVP7U9D+zKkSBLpNuhIZKBim2yypQzgCJc1jZlRbV1lPnJVHT9r/j15GtbzUoiecIZg17SEvqMhX9P9sUD9HTs/15d7M69eXBrLXRL/mAPBJ9VyBpU/U0h9UxhLgSL/UNPob98RJayaajNxYaAX+afKs+vM46J9OBsmFlUuitauBSLa0EQeB3mOavuX3ogj/UkX+5GAkkn6LFCbRx4erYNJhlaQKXMV1nErhUyqumu/nWgaoNJXXb4H4VHUqxBB5N56HQtSPBxrgYnQL5KVMt2XiSx5j6SUbawwdHLPL27ECntZJaOkZCFuSAeDVh6OVVXv8RjBtgSusuc+Dnhu3DOTefEQn8b8fPkBlhqZkONMaojOybpL6PYgQgjtBKC1WO1F58oiQ1ZNZruXMM=
  skip_cleanup: true
  files: ./
  on:
    branch: main

install:
- docker --version
stages:
- docker_build
- test
- deploy
jobs:
  include:
  - stage: docker_build
    name: build and push docker
    script:
    - echo "LOGIN"
    - echo $DOCKER_PASSWORD | docker login -u $DOCKER_USERNAME --password-stdin
    - echo "BUILD"
    - docker build -t $DOCKER_USERNAME/minitwit_web:latest . -f ./minitwit_frontend/Dockerfile
    - docker build -t $DOCKER_USERNAME/minitwit_api:latest . -f ./minitwit_backend/Dockerfile
    - docker build -t $DOCKER_USERNAME/minitwit_proxy:latest . -f ./nginx/Dockerfile
    - echo "PUSH"
    - docker push $DOCKER_USERNAME/minitwit_web:latest
    - docker push $DOCKER_USERNAME/minitwit_api:latest
    - docker push $DOCKER_USERNAME/minitwit_proxy:latest
  - stage: test
    name: run test(s)
    install: skip
    script: |
      cd minitwit_frontend && 
      python -m pip install -r requirements.txt &&
      python manage.py makemigrations &&
      python manage.py migrate &&
      python manage.py test &&
      # cd ../minitwit_backend 
      # python -m pip install -r requirements.txt &&
      # python manage.py makemigrations &&
      # python manage.py migrate &&
      # python manage.py test 
  - stage: deploy
    name: deploy new version
    install: skip
    script: 'ssh -o "StrictHostKeyChecking no" ${MT_USER}@${MT_SERVER} "source /root/.bash_profile;
      cd /vagrant; docker-compose pull; docker-compose up -d"'