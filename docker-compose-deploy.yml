version: "3.5"

services:
  db:
    image: postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-changeme}
      PGDATA: /data/postgres
    volumes:
      - postgres:/data/postgres
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - minitwit 

  api:
    build:
      context: ./minitwit_backend
    command: python manage.py runserver 127.0.0.1:8080
    volumes:
      - .:/code
    ports:
      - "8080:8080"
    depends_on:
      - db
    networks:
      - minitwit 
    environment: 
      - SECRET_KEY=thisshouldbesecret
      - DB_NAME=minitwit
      - DB_USER=postgres
      - DB_PASSWORD=changeme
      - DB_HOST=db
      - ALLOWED_HOSTS=127.0.0.1,localhost,api.minitwititu.dk

  web:
    build:
      context: ./minitwit_frontend
    volumes:
      - .:/code
    ports:
      - "8000:8000"
    volumes:
      - static_data:/vol/static
    depends_on:
      - db
    networks:
      - minitwit 
    environment: 
      - SECRET_KEY=thisshouldbesecret
      - DB_NAME=minitwit
      - DB_USER=postgres
      - DB_PASSWORD=changeme
      - DB_HOST=db
      - ALLOWED_HOSTS=127.0.0.1,localhost,api.minitwititu.dk
  
  proxy:
    build:
      context: ./nginx
    volumes:
      - static_data:/vol/static
    networks:
      - minitwit 
    ports:
      - "1337:1337"
    depends_on:
      - web
      - api


networks:
  minitwit:
    driver: bridge

volumes:
  postgres:
  static_data:
