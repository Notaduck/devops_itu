version: '3.5'

networks:
  main:
    name: minitwit-network

services:
  db:
    # image: ${DOCKER_USERNAME}/minitwit_db
    image: postgres
    container_name: minitwit_db
    env_file:
      - .env
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
      - postgres:/data/postgres
    networks:
      - main
    ports:
      - '5432:5432'
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: always

  web:
    image: ${DOCKER_USERNAME}/minitwit_web
    container_name: minitwit_web
    env_file:
      - .env
    depends_on:
     - db
    networks:
      - main
    ports:
      - '8000:8000'
    volumes:
      - static_data:/vol/web
    restart: always

  api:
    image: ${DOCKER_USERNAME}/minitwit_api
    container_name: minitwit_api
    env_file:
      - .env
    depends_on:
     - db
    networks:
      - main
    ports:
      - '9000:9000'
    restart: always

  proxy:
    image: ${DOCKER_USERNAME}/minitwit_proxy
    container_name: minitwit_proxy
    depends_on:
      - web
      - api
    networks:
      - main
    ports:
      - '80:8080'
    volumes:
      - static_data:/vol/static
    restart: always

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    depends_on:
      - proxy 
    ports:
      - "9090:9090"
    networks:
      - main 

  grafana:
    image: grafana/grafana
    depends_on:
      - prometheus 
    ports:
      - "3000:3000"
    env_file:
      - .env
    volumes:
      - grafana_data:/var/lib/grafana
    networks:
      - main 


volumes:
  postgres:
  static_data:
  grafana_data:
  prometheus_data: