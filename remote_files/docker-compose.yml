version: '3.5'

networks:
  main:
    name: minitwit-network

services:
  db:
    # image: ${DOCKER_USERNAME}/minitwit_db
    image: postgres
    container_name: minitwit_db
    environment:
      PGDATA: /data/postgres
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
      - postgres:/data/postgres
    networks:
      - main
    ports:
      - '5432:5432'
    env_file:
      - .env
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: always

  web:
    image: ${DOCKER_USERNAME}/minitwit_web
    container_name: minitwit_web
    depends_on:
      - db
    networks:
      - main
    ports:
      - '8000:8000'
    env_file:
      - .env
    volumes:
      - static_data:/vol/static
    restart: always

  proxy:
    image: ${DOCKER_USERNAME}/minitwit_proxy
    container_name: minitwit_proxy
    depends_on:
      - web
    networks:
      - main
    ports:
      - '80:8080'
    volumes:
      - static_data:/vol/static
    restart: always


volumes:
  postgres:
  static_data:
  # minitwitimage:
  #   image: ${DOCKER_USERNAME}/minitwitimage
  #   container_name: minitwit
  #   networks:
  #     - main
  #   depends_on:
  #     - itusqlimage
  #   ports:
  #       - '5000:5000'

  # itusqlimage:
  #   image: ${DOCKER_USERNAME}/mysqlimage
  #   container_name: minitwit_mysql
  #   networks:
  #     - main
  #   ports:
  #     - '3306:3306'
  #   environment:
  #       - MYSQL_ROOT_PASSWORD=root
